[
  {
    "objectID": "course-materials/day1.html",
    "href": "course-materials/day1.html",
    "title": "Basic math review",
    "section": "",
    "text": "IMAGE HERE"
  },
  {
    "objectID": "course-materials/day1.html#pre-class-prep",
    "href": "course-materials/day1.html#pre-class-prep",
    "title": "Basic math review",
    "section": "Pre-class prep",
    "text": "Pre-class prep\nTBD"
  },
  {
    "objectID": "course-materials/day1.html#class-materials",
    "href": "course-materials/day1.html#class-materials",
    "title": "Basic math review",
    "section": "Class materials",
    "text": "Class materials\n\n\n\n\n\n\n\n\n\n Session\n Lecture slides\n Interactive session\n\n\n\n\nday 1 / morning\nBasic algebra review, units and unit conversions, exponents, logarithms\nMeet our R tools, basic operations, our first R function\n\n\nday 1 / afternoon\nFunctions (interpreting & evaluating), reading graphs, slope\nR projects, storing objects, creating vectors and sequences"
  },
  {
    "objectID": "course-materials/day1.html#end-of-day-practice",
    "href": "course-materials/day1.html#end-of-day-practice",
    "title": "Basic math review",
    "section": "End-of-day practice",
    "text": "End-of-day practice\nComplete the following tasks / activities before heading home for the day!\n\n Day 1 Practice: Problems, gut checks, R Projects, and a function"
  },
  {
    "objectID": "course-materials/day2.html",
    "href": "course-materials/day2.html",
    "title": "Derivatives",
    "section": "",
    "text": "IMAGE HERE"
  },
  {
    "objectID": "course-materials/day2.html#pre-class-prep",
    "href": "course-materials/day2.html#pre-class-prep",
    "title": "Derivatives",
    "section": "Pre-class prep",
    "text": "Pre-class prep\nTBD"
  },
  {
    "objectID": "course-materials/day2.html#class-materials",
    "href": "course-materials/day2.html#class-materials",
    "title": "Derivatives",
    "section": "Class materials",
    "text": "Class materials\n\n\n\n\n\n\n\n\n\n Session\n Lecture slides\n Interactive session\n\n\n\n\nday 2 / morning\nDefinition of the derivative\nDerivatives by hand and in R\n\n\nday 2 / afternoon\nHigher order & partial derivatives\nPartial & higher order derivatives in R"
  },
  {
    "objectID": "course-materials/day2.html#end-of-day-practice",
    "href": "course-materials/day2.html#end-of-day-practice",
    "title": "Derivatives",
    "section": "End-of-day practice",
    "text": "End-of-day practice\nComplete the following tasks / activities before heading home for the day!\n\n Day 2 Practice: Derivatives, plots, git"
  },
  {
    "objectID": "course-materials/day4.html",
    "href": "course-materials/day4.html",
    "title": "Linear algebra and summary statistics",
    "section": "",
    "text": "IMAGE HERE"
  },
  {
    "objectID": "course-materials/day4.html#pre-class-prep",
    "href": "course-materials/day4.html#pre-class-prep",
    "title": "Linear algebra and summary statistics",
    "section": "Pre-class prep",
    "text": "Pre-class prep\nTBD"
  },
  {
    "objectID": "course-materials/day4.html#class-materials",
    "href": "course-materials/day4.html#class-materials",
    "title": "Linear algebra and summary statistics",
    "section": "Class materials",
    "text": "Class materials\n\n\n\n\n\n\n\n\n\n Session\n Lecture slides\n Interactive session\n\n\n\n\nday 4 / morning\nLinear algebra continued\nLinear algebra continued - vectors, matrices, a Leslie matrix example\n\n\nday 4 / afternoon\nEssential summary statistics and describing data\nData exploration and summary statistics - getting started"
  },
  {
    "objectID": "course-materials/day4.html#end-of-day-practice",
    "href": "course-materials/day4.html#end-of-day-practice",
    "title": "Linear algebra and summary statistics",
    "section": "End-of-day practice",
    "text": "End-of-day practice\nComplete the following tasks / activities before heading home for the day!\n\n Day 4 Practice: Matrices and matrix algebra, exploring and summarizing data"
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "Essential Math in Environmental Data Science",
    "section": "Course Description",
    "text": "Course Description\nQuantitative skills are critical when working with, understanding, analyzing and gleaning insights from environmental data. In the intensive EDS 212 course, students will refresh fundamental skills in basic math (algebra, uni- and multivariate functions, units and unit conversions), derivative and integral calculus, differential equations, linear algebra, and reading, writing and evaluating logical operations.\nThe goal of EDS 212 (Essential Math in Environmental Data Science) is to prepare incoming MEDS students with quantitative methods, skills, notation and language commonly used in environmental data science and required for their data science courses and projects in the program. By the end of the course, students should be able to:\n\nPerform the following by hand and in R: convert units, basic algebra and working with logs and exponentials; write, interpret and evaluate univariate and multivariate functions; basic derivatives and integrals with univariate and multivariate functions; solve simple differential equations; basic operations with scalars, vectors and matrices; writing and evaluating logicals\nExplain and share examples for how all topics in EDS 212 are useful and used in applied environmental data science\nInterpret examples of applied math & models from environmental science case studies\nWork with peers to solve group tasks, then communicate the process of problem solving to the rest of the class"
  },
  {
    "objectID": "index.html#teaching-team",
    "href": "index.html#teaching-team",
    "title": "Essential Math in Environmental Data Science",
    "section": "Teaching Team",
    "text": "Teaching Team\n\n\n\n\nCo-Instructor\n\n\n\n\n\n\n\n\n\n\n\nSam Csik\nEmail: scsik@ucsb.edu\nLearn more: samanthacsik.github.io\n\n\n\n\nCo-Instructor\n\n\n\n\n\n\n\n\n\n\n\nRuth Oliver\nEmail: rutholiver@ucsb.edu\nLearn more: ryoliver-lab.github.io\n\n\n\n\nTA\n\n\n\n\n\n\n\n\n\n\n\nTBD\nEmail: tbd\nLearn more: tbd"
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Essential Math in Environmental Data Science",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nEDS 212 was originally developed and taught by Allison Horst. This new website houses materials which are heavily adapted from and inspired by Allisonâ€™s original work."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "course-materials/day5.html",
    "href": "course-materials/day5.html",
    "title": "Basic probability theory and Boolean algebra",
    "section": "",
    "text": "IMAGE HERE"
  },
  {
    "objectID": "course-materials/day5.html#pre-class-prep",
    "href": "course-materials/day5.html#pre-class-prep",
    "title": "Basic probability theory and Boolean algebra",
    "section": "Pre-class prep",
    "text": "Pre-class prep\nTBD"
  },
  {
    "objectID": "course-materials/day5.html#class-materials",
    "href": "course-materials/day5.html#class-materials",
    "title": "Basic probability theory and Boolean algebra",
    "section": "Class materials",
    "text": "Class materials\n\n\n\n\n\n\n\n\n\n Session\n Lecture slides\n Interactive session\n\n\n\n\nday 5 / morning\nSummary statistics continued, basic probability theory\nBasic probability problems, summary statistics, R Markdown customization\n\n\nday 5 / afternoon\nBoolean logic and operators, hypothesis test primer, & course recap\nRelational & logical operators in R"
  },
  {
    "objectID": "course-materials/day5.html#end-of-day-practice",
    "href": "course-materials/day5.html#end-of-day-practice",
    "title": "Basic probability theory and Boolean algebra",
    "section": "End-of-day practice",
    "text": "End-of-day practice\nThere are no end-of-day tasks / activities today!"
  },
  {
    "objectID": "course-materials/day3.html",
    "href": "course-materials/day3.html",
    "title": "Differential equations, intro to linear algebra",
    "section": "",
    "text": "IMAGE HERE"
  },
  {
    "objectID": "course-materials/day3.html#pre-class-prep",
    "href": "course-materials/day3.html#pre-class-prep",
    "title": "Differential equations, intro to linear algebra",
    "section": "Pre-class prep",
    "text": "Pre-class prep\nTBD"
  },
  {
    "objectID": "course-materials/day3.html#class-materials",
    "href": "course-materials/day3.html#class-materials",
    "title": "Differential equations, intro to linear algebra",
    "section": "Class materials",
    "text": "Class materials\n\n\n\n\n\n\n\n\n\n Session\n Lecture slides\n Interactive session\n\n\n\n\nday 3 / morning\nDifferential equations, and solving them numerically\nInterpreting differential equations, solving numerically\n\n\nday 3 / afternoon\nIntroduction to linear algebra basics\nMaking & basic algebra with vectors and matrices"
  },
  {
    "objectID": "course-materials/day3.html#end-of-day-practice",
    "href": "course-materials/day3.html#end-of-day-practice",
    "title": "Differential equations, intro to linear algebra",
    "section": "End-of-day practice",
    "text": "End-of-day practice\nComplete the following tasks / activities before heading home for the day!\n\n Day 3 Practice: Vectors by hand and in R, git practice"
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html",
    "title": "Interactive Session 1A",
    "section": "",
    "text": "IMAGE HERE"
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#meet-r-all-on-its-own",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#meet-r-all-on-its-own",
    "title": "Interactive Session 1A",
    "section": "1. Meet R all on its own",
    "text": "1. Meet R all on its own\n\nâ€¦because you should do it just one time.\n\n\nOpen R (outside of RStudio) once just to see what it looks like. Itâ€™s very likely that you will never open R on its own againâ€¦but there are people who work entirely in the basic R interpreter and minimal environment.\n\n\n\n\n\n\n\n\n\n\n\nNow youâ€™ve seen it. Close it - from now on, youâ€™ll open RStudio (which opens R along with it). RStudio is an incredibly awesome and user-friendly integrated development environment (IDE). An IDE provides a place for data scientists to see and work with a bunch of different aspects of their work in a nice, organized interface.\n\n\nAlways remember: R is the programming language. RStudio is the IDE."
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#meet-rstudio",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#meet-rstudio",
    "title": "Interactive Session 1A",
    "section": "2. Meet RStudio",
    "text": "2. Meet RStudio\nRStudio provides a nice user interface for data science, development, reporting, and collaboration (all of which youâ€™ll learn about throughout the MEDS program) in one place. Note that while itâ€™s called RStudio, it is a useful IDE for development in a number of languages and file types (check out some by clicking on File &gt; New File, and seeing the multitude of options that RStudio suggests).\nLetâ€™s take a quick tour of the RStudio IDE, then customize it for fun and functionality:\n\nPrimary panes include the Source pane, Console pane, Environment pane (which contains Environment, History, Connections, Build, Tutorial tabs), and the Output pane (which includes Files, Plots, Packages, Help, Viewer, and Presentation tabs)\n\nUpdate or arrange panes (and even add additional Source panes) by navigaing to Tools &gt; Global Options &gt; Pane Layout\n\n\n\n\n\n\n\n\n\n\n\n\nUpdate your theme by navigating to Tools &gt; Global Options &gt; Appearance (pick a theme & editor font â€“ the above screenshot uses the Material theme and Monaco editor font)\nUpdate some important settings, including:\n\nTurn on rainbow parentheses: Code &gt; Display &gt; Use rainbow rarentheses (CHECK)\nTurn on code wrapping: Code &gt; Editing &gt; Soft wrap R source files (CHECK)\nPrevent RStudio from saving your workspace: General &gt; Basic &gt; Save workspace to .Rdata on exit? (Choose NEVER)\n\n\nYou can check out the RStudio User Guide for additional information and helpful tips!"
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#basic-calculations-in-the-console",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#basic-calculations-in-the-console",
    "title": "Interactive Session 1A",
    "section": "3. Basic calculations in the Console",
    "text": "3. Basic calculations in the Console\nNext, letâ€™s familiarize ourselves with some basic operations in the Console:\n\nPressing Enter / Return will immediately execute a line of code typed into the Console. Try using some of the common operators (*, /, +, -, ^), as well as functions to perform calculations in the Console:\n\n\n# perform calculations using operators:\n7 * 11\n21 / 3\n1 + 1\n4 - 3\n4 ^ 2\n\n# perform calculations using functions: \nsqrt(4) # compute the square root\nlog10(100) # compute the common (base 10) logarithm\nlog(2) # compute the natural logarithm\n\n\nCool! But what exactly is a function? Functions are self-contained pieces of code, which are built to accomplish a specific task. They accept inputs (we call these arguments), and return outputs.\n\nCheck out the R documentation for a function using the syntax, ?function_name. For example, try running, ?log, in the Console\n\nThe documentation tells us that log() computes the natural logarithm and takes two arguments, x and base. base is already set to a default value (exp(1)), which we can update if desired. We must supply a value for the x argument in order for the function to execute, since x is not set to any default value. The Arguments section of the documentation tells us that x can be a numeric or complex vector. We can supply just our numeric value (e.g.Â 2), or explicitly include the argument name as well:\n\n\n\n\nlog(2)\nlog(x = 2)\n\n\nStore objects using the assignment operator, &lt;-. Any objects (also called variables) will appear in the Environment tab. Use snake_case and always start object names off with a letter (and not a number). For example:\n\n\ncurrent_year &lt;- 2024 # integer\nclass_num &lt;- \"EDS 212\" # character string\ntemp_c &lt;- 17.4 # numeric \npenguin_bill_length_mm &lt;- 41.13 # numeric\npenguin_bill_depth_mm &lt;- 20.24 # numeric\n\n\nWe can also create our own functions. Letâ€™s say we want to create a function that calculates a penguinâ€™s bill length:depth ratio. Weâ€™ll need two values (a bill length and a bill depth) to calculate this ratio, therefore our function will need to take two arguments, which represent these values. Our function might look something like this:\n\n\n# write function that calculates penguin bill length:depth ratio ----\ncalculate_bill_LD_ratio &lt;- function(bill_length, bill_depth) {\n  \n  LD_ratio &lt;- bill_length / bill_depth\n  \n  return(LD_ratio)\n  \n}\n\n# try using your function (the following three lines all return the same output) ----\ncalculate_bill_LD_ratio(41.1, 20.4)\ncalculate_bill_LD_ratio(bill_length = 41.1, bill_depth = 20.4)\ncalculate_bill_LD_ratio(bill_depth = 20.4, bill_length = 41.1) # MUST include arg names if you decide to change the order of your values\n\n# store some bill measurements as objects ---\npenguinA_bill_length &lt;- 31.2\npenguinA_bill_depth &lt;- 24.1\n\n# then supply those objects as values to your function (the following two lines return the same output) ----\ncalculate_bill_LD_ratio(penguinA_bill_length, penguinA_bill_depth)\ncalculate_bill_LD_ratio(bill_length = penguinA_bill_length, bill_depth = penguinA_bill_depth)\n\nThe keyboard shortcut, control + option + X helps us do so\n\n\n\n\n\n\n\n\nCreate a function (with shortcut Cmd + Shift + X) and use it a few times\nNow go to Session &gt; Restart Râ€¦are your objects still there? NOPE."
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#introduction-to-quarto",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#introduction-to-quarto",
    "title": "Interactive Session 1A",
    "section": "4. Introduction to Quarto",
    "text": "4. Introduction to Quarto\nQuarto is a publishing framework that lets you make all kinds of things (dashboards, websites, notebooks, slides, books, etc.) that combine markdown (plain text with added formatting), code, and outputs in one place - which makes it an incredible tool for reproducibility. Letâ€™s make a Quarto document (File &gt; Quarto document) and learn by doing.\nIn your new Quarto document, letâ€™s add:\n\nSome text formatting\n\nHeaders (with different numbers of pound signs to start the line)\nBulletpoints (asterisks or dashes to start lines)\nLinks ([text here!](link here))\nBold (double asterisk) & italics (single asterisk)\n\nCode chunks (shortcut: Cmd + Option + I)\nOutputs (run code with Cmd + Enter, or buttons)\nKnitting: When you render an Quarto document, all content is first converted to plain markdown, then converted to a file output type you select (the default, and the one weâ€™ll use most often is HTML)"
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#our-first-function",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#our-first-function",
    "title": "Interactive Session 1A",
    "section": "5. Our first function",
    "text": "5. Our first function\nWeâ€™ll get into the weeds of functions in EDS 221. For now, weâ€™ll create functions to quickly do repeated calculations, and to familiarize ourselves with function notation.\nGeneral function notation looks like this:\n\nfunction_name &lt;- function(argument_1, argument_2) {\n\n  function_body\n\n}\n\nFor example, letâ€™s make a function to help us convert units of \\(\\frac{g}{cm^3}\\) to \\(\\frac{kg}{ft^3}\\), given that \\(1 cm^3 = 3.531\\times10^{-5}ft^3\\)\nFirst, we should write down the dimensional analysis to keep our conversion straight (this is worth writing out by hand, every time):\n\\[\\frac{g}{cm^3}*\\frac{1 kg}{1000 g}*\\frac{1cm^3}{3.531\\times10^{-5}ft^3}\\]\nLetâ€™s make a function that will convert any value input in \\(\\frac{g}{cm^3}\\) to \\(\\frac{kg}{ft^3}\\):\n\nconvert_units &lt;- function(value_g_cm3) {\n  value_kg_ft3 = value_g_cm3 * (1 / 1000) * (1 / 3.531e-5)\n  print(value_kg_ft3)\n}\n\nTry it out!\nConvert \\(50\\frac{g}{cm^3}\\) to \\(\\frac{kg}{ft^3}\\) using the function youâ€™ve created."
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#close-reopen---no-precious-outputs-or-objects",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#close-reopen---no-precious-outputs-or-objects",
    "title": "Interactive Session 1A",
    "section": "6. Close & reopen - no precious outputs or objects",
    "text": "6. Close & reopen - no precious outputs or objects\nIf you are writing code reproducibly, you should be able to close the file youâ€™re working it without stress. Thatâ€™s because all of your stored objects - functions, variables, etc. - should be recreated by opening and re-running the code in your file. If you cannot do that, then your code is not reproducible.\nThat means that your scripted code is what is precious - and we want to build bomb-proof strategies for making sure itâ€™s safe.\nWhich brings us to a critical lesson: Create things like you expect your computer to explode at any minute. Your computer is NOT a safe place. Where is? Someone away from your local computerâ€¦somewhere cloudlike and wonderful. Somewhere like GitHub (coming up soon!).\n\n\nEnd interactive session 1A"
  },
  {
    "objectID": "course-materials/interactive-session-keys/interactive-session-1a.html#end-interactive-session-1a",
    "href": "course-materials/interactive-session-keys/interactive-session-1a.html#end-interactive-session-1a",
    "title": "Interactive Session 1A",
    "section": "End interactive session 1a",
    "text": "End interactive session 1a"
  }
]